name: CI
on: [push, pull_request]

env:
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  DB_HOST: localhost
  DB_USERNAME: postgres
  DB_PASSWORD: postgres

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: makerspacerepo_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v3.0.1
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3
          bundler-cache: true
      - uses: actions/setup-node@v2
        with:
          node-version: "14.15.5"
      - uses: c-hive/gha-yarn-cache@v1
      - run: npm i -g yarn
      - run: yarn install
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "makerepo-1632742c49cc.json"
          json: ${{ secrets.CREDENTIALS_JSON }}
          dir: "config/"
      - name: Build and test
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/makerspacerepo_test
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
          #RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          mkdir certs && touch certs/saml.key && touch certs/saml.crt
          openssl req -x509 -newkey rsa:4096 -keyout certs/saml.key -out certs/saml.crt -days 1 -nodes -subj "/C=CA/ST=Ontario/L=Ottawa/O=uOttawa/OU=Richard L'Abb√© Makerspace/CN=makerepo.com/emailAddress=travis-ci@makerepo.com"
          wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb
          sudo apt install ./wkhtmltox_0.12.6-1.focal_amd64.deb
          bundle exec rails db:prepare
          bundle exec rails db:migrate
          bundle exec rails spec
      - name: Deploy Staging
        if: github.ref == 'refs/heads/staging'
        env:
          DEPLOY_ENC_KEY: ${{ secrets.DEPLOY_ENC_KEY }}
        run: |
          openssl enc -d -aes-256-cbc -md sha512 -salt -in config/deploy_id_ed25519_staging_enc -out config/deploy_id_ed25519_staging -k $DEPLOY_ENC_KEY -a -pbkdf2
          chmod 600 config/deploy_id_ed25519_staging
          eval "$(ssh-agent -s)"
          ssh-add config/deploy_id_ed25519_staging
          gem install capistrano
          bundle exec cap staging deploy
      - name: Deploy Master
        if: github.ref == 'refs/heads/master'
        env:
          DEPLOY_ENC_KEY: ${{ secrets.DEPLOY_ENC_KEY }}
        run: |
          openssl enc -d -aes-256-cbc -md sha512 -salt -in config/deploy_id_rsa_enc -out config/deploy_id_rsa -k $DEPLOY_ENC_KEY -a -pbkdf2
          chmod 600 config/deploy_id_rsa
          eval "$(ssh-agent -s)"
          ssh-add config/deploy_id_rsa
          gem install capistrano
          bundle exec cap production deploy
      - uses: ravsamhq/notify-slack-action@master
        if: always()
        with:
          status: ${{ job.status }}
          notify_when: "success,failure,warnings" # default is 'success,failure,warnings'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      - uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          timezone: "America/Montreal"
          show-on-start: false
